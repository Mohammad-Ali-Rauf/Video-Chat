{"version":3,"sources":["SocketContext.js","components/VideoPlayer.js","components/Notifications.js","components/Options.js","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","children","useState","stream","setStream","me","setMe","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivedCall","Provider","value","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answerCall","to","useStyles","makeStyles","theme","width","gridContainer","justifyContent","paper","padding","border","margin","VideoPlayer","useContext","classes","Grid","container","className","Paper","item","xs","md","Typography","variant","gutterBottom","playsInline","muted","ref","autoPlay","Notifications","style","display","Button","color","onClick","root","flexDirection","breakpoints","down","marginTop","Options","idToCall","setIdToCall","Container","elevation","noValidate","autoComplete","console","log","TextField","label","onChange","e","target","fullWidth","text","startIcon","Assignment","fontSize","PhoneDisabled","Phone","appBar","borderRadius","alignItems","image","marginLeft","wrapper","App","AppBar","position","align","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c64b728.chunk.js","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\n\nconst SocketContext = createContext();\n\nconst socket = io('https://video-chat-app-ali.herokuapp.com/');\n\nconst ContextProvider = ({ children }) => {\n    const [stream, setStream] = useState(null);\n    const [me, setMe] = useState('');\n    const [call, setCall] = useState({});\n    const [callAccepted, setCallAccepted] = useState(false);\n    const [callEnded, setCallEnded] = useState(false);\n    const [name, setName] = useState('');\n\n    const myVideo = useRef();\n    const userVideo = useRef();\n    const connectionRef = useRef();\n\n    useEffect(() => {\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n            .then((currentStream) => {\n                setStream(currentStream);\n\n                myVideo.current.srcObject = currentStream;\n            });\n\n        socket.on('me', (id) => setMe(id));\n\n        socket.on('calluser', ({ from, name: callerName, signal }) => {\n            setCall({ isReceivedCall: true, from, name: callerName, signal })\n        });\n    }, []);\n\n    const answerCall = () => {\n        setCallAccepted(true)\n\n        const peer = new Peer({ initiator: false, trickle: false, stream });\n\n        peer.on('signal', (data) => {\n            socket.emit('answercall', { signal: data, to: call.from });\n        });\n\n        peer.on('stream', (currentStream) => {\n            userVideo.current.srcObject = currentStream;\n        });\n\n        peer.signal(call.signal);\n\n        connectionRef.current = peer;\n    }\n\n    const callUser = (id) => {\n        const peer = new Peer({ initiator: true, trickle: false, stream });\n\n        peer.on('signal', (data) => {\n            socket.emit('calluser', { userToCall: id, signalData: data, from: me, name });\n        });\n\n        peer.on('stream', (currentStream) => {\n            userVideo.current.srcObject = currentStream;\n        });\n\n        socket.on('callaccepted', (signal) => {\n            setCallAccepted(true);\n\n            peer.signal(signal);\n        });\n\n        connectionRef.current = peer;\n    }\n\n    const leaveCall = () => {\n        setCallEnded(true);\n\n        connectionRef.current.destroy();\n\n        window.location.reload();\n    }\n\n    return (\n        <SocketContext.Provider value={{ call, callAccepted, myVideo, userVideo, stream, name, setName, callEnded, me, callUser, leaveCall, answerCall }}>\n            {children}\n        </SocketContext.Provider>\n    );\n}\n\nexport { ContextProvider, SocketContext };","import React, { useContext } from 'react';\nimport { Grid, Typography, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { SocketContext } from '../SocketContext';\n\nconst useStyles = makeStyles((theme) => ({\n    video: {\n        width: '550px',\n    },\n    gridContainer: {\n        justifyContent: 'center',\n    },\n    paper: {\n        padding: '10px',\n        border: '2px solid black',\n        margin: '10px',\n    },\n}));\n\nconst VideoPlayer = () => {\n    const { name, callAccepted, myVideo, userVideo, callEnded, stream, call } = useContext(SocketContext);\n    const classes = useStyles();\n\n    return (\n        <Grid container className={classes.gridContainer}>\n            {/* Our Own Video */}\n            {stream && (\n                <Paper className={classes.paper}>\n                    <Grid item xs={12} md={6}>\n                        <Typography variant=\"h5\" gutterBottom>{name || 'Name'}</Typography>\n                        <video playsInline muted ref={myVideo} autoPlay className={classes.video} />\n                    </Grid>\n                </Paper>\n            )}\n            {/* User's Video */}\n            {callAccepted && !callEnded && (\n                <Paper className={classes.paper}>\n                    <Grid item xs={12} md={6}>\n                        <Typography variant=\"h5\" gutterBottom>{call.name || 'Name'}</Typography>\n                        <video playsInline ref={userVideo} autoPlay className={classes.video} />\n                    </Grid>\n                </Paper>\n            )}\n        </Grid>\n    );\n}\n\nexport default VideoPlayer;","import React, { useContext } from 'react';\nimport { Button } from '@material-ui/core';\n\nimport { SocketContext } from '../SocketContext';\n\nconst Notifications = () => {\n    const { answerCall, call, callAccepted } = useContext(SocketContext);\n\n    return (\n        <>\n            {call.isReceivedCall && !callAccepted && (\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                    <h1>{call.name} is calling: </h1>\n                    <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\n                        Answer\n                    </Button>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default Notifications;","import React, { useContext, useState } from 'react';\nimport { Button, TextField, Grid, Typography, Container, Paper } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons';\n\nimport { SocketContext } from '../SocketContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    gridContainer: {\n        width: '100%',\n        [theme.breakpoints.down('xs')]: {\n            flexDirection: 'column',\n        },\n    },\n    container: {\n        width: '600px',\n        margin: '35px 0',\n        padding: 0,\n        [theme.breakpoints.down('xs')]: {\n            width: '80%'\n        },\n    },\n    margin: {\n        marginTop: 20,\n    },\n    padding: {\n        padding: 20,\n    },\n    paper: {\n        padding: '10px 20px',\n        border: '2px solid black',\n    },\n}));\n\nconst Options = ({ children }) => {\n    const { me, callAccepted, name, setName, callEnded, leaveCall, callUser } = useContext(SocketContext);\n    const [idToCall, setIdToCall] = useState('');\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.container}>\n            <Paper elevation={10} className={classes.paper}>\n                <form className={classes.root} noValidate autoComplete=\"off\">\n                    <Grid container className={classes.gridContainer}>\n                        <Grid item xs={12} md={6} className={classes.padding}>\n                            <Typography gutterBottom variant=\"h6\">Account Info</Typography>\n                            {console.log(me)}\n                            <TextField label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} fullWidth />\n                            <CopyToClipboard text={me} className={classes.margin}>\n                                <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\" />}>\n                                    Copy Your ID\n                                </Button>\n                            </CopyToClipboard>\n                        </Grid>\n                        <Grid item xs={12} md={6} className={classes.padding}>\n                            <Typography gutterBottom variant=\"h6\">Make a call</Typography>\n                            <TextField label=\"ID to Call\" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} fullWidth />\n                            {callAccepted && !callEnded ? (\n                                <Button variant=\"contained\" color=\"secondary\" startIcon={<PhoneDisabled fontSize=\"large\" />}fullWidth onClick={leaveCall}className={classes.margin}>\n                                    Hang Up\n                                </Button>\n                            ) : (\n                                <Button variant=\"contained\"  color=\"primary\"  startIcon={<Phone  fontSize=\"large\" />} fullWidth onClick={() => callUser(idToCall)} className={classes.margin}>\n                                    Call\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </form>\n                {children}\n            </Paper>\n        </Container>\n    )\n}\n\nexport default Options;","import React from 'react';\nimport { Typography, AppBar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\n\nimport VideoPlayer from './components/VideoPlayer';\nimport Notifications from './components/Notifications';\nimport Options from './components/Options';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderRadius: 15,\n    margin: '30px 100px',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '600px',\n    border: '2px solid black',\n  },\n    image: {\n      marginLeft: '15px',\n    },\n    wrapper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      width: '100%',\n    },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.wrapper}>\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n        <Typography variant=\"h2\" align=\"center\">VideoChat</Typography>\n      </AppBar>\n      <VideoPlayer />\n      <Options>\n        <Notifications />\n      </Options>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { ContextProvider } from './SocketContext';\nimport './App.css';\n\nReactDOM.render(\n  <ContextProvider>\n    <App />\n  </ContextProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}